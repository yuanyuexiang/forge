# 产品相关的GraphQL操作

# 查询所有产品（带权限过滤）
query GetProducts($userId: ID) {
  products(filter: { user_created: { id: { _eq: $userId } } }) {
    id
    name
    subtitle
    description
    price
    market_price
    stock
    barcode
    brand
    boutique_id {
      id
      name
      address
    }
    category_id {
      id
      name
    }
    seller_id
    main_image
    images
    video_url
    is_on_sale
    carousel
    status
    total_sales_volume
    rating_avg
    total_reviews
    created_at
    date_created
    updated_at
    date_updated
    user_created {
      id
      first_name
      last_name
      email
    }
  }
}

# 查询所有产品（不带权限过滤，用于管理员）
query GetAllProducts {
  products {
    id
    name
    subtitle
    description
    price
    market_price
    stock
    barcode
    brand
    boutique_id {
      id
      name
      address
    }
    category_id {
      id
      name
    }
    seller_id
    main_image
    images
    video_url
    is_on_sale
    carousel
    status
    total_sales_volume
    rating_avg
    total_reviews
    created_at
    date_created
    updated_at
    date_updated
    user_created {
      id
      first_name
      last_name
      email
    }
  }
}

# 根据ID查询产品
query GetProductById($id: ID!) {
  products_by_id(id: $id) {
    id
    name
    subtitle
    description
    price
    market_price
    stock
    barcode
    brand
    boutique_id {
      id
      name
      address
    }
    category_id {
      id
      name
    }
    seller_id
    main_image
    images
    video_url
    is_on_sale
    carousel
    status
    total_sales_volume
    rating_avg
    total_reviews
    created_at
    updated_at
  }
}

# 创建产品
mutation CreateProduct($data: create_products_input!) {
  create_products_item(data: $data) {
    id
    name
    subtitle
    description
    price
    market_price
    stock
    barcode
    brand
    boutique_id {
      id
      name
      address
    }
    category_id {
      id
      name
    }
    seller_id
    main_image
    images
    video_url
    is_on_sale
    carousel
    status
    total_sales_volume
    rating_avg
    total_reviews
    created_at
    updated_at
  }
}

# 更新产品
mutation UpdateProduct($id: ID!, $data: update_products_input!) {
  update_products_item(id: $id, data: $data) {
    id
    name
    subtitle
    description
    price
    market_price
    stock
    barcode
    brand
    boutique_id {
      id
      name
      address
    }
    category_id {
      id
      name
    }
    seller_id
    main_image
    images
    video_url
    is_on_sale
    carousel
    status
    total_sales_volume
    rating_avg
    total_reviews
    created_at
    updated_at
  }
}

# 删除产品
mutation DeleteProduct($id: ID!) {
  delete_products_item(id: $id) {
    id
  }
}
