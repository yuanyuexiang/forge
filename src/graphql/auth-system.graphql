# GraphQL System Authentication Mutations and Queries
# 基于 /graphql/system 端点的认证操作

# 登录 Mutation
mutation AuthLogin($email: String!, $password: String!, $mode: auth_mode, $otp: String) {
  auth_login(email: $email, password: $password, mode: $mode, otp: $otp) {
    access_token
    expires
    refresh_token
  }
}

# 刷新 Token Mutation
mutation AuthRefresh($refresh_token: String!, $mode: auth_mode) {
  auth_refresh(refresh_token: $refresh_token, mode: $mode) {
    access_token
    expires
    refresh_token
  }
}

# 登出 Mutation
mutation AuthLogout($refresh_token: String!, $mode: auth_mode) {
  auth_logout(refresh_token: $refresh_token, mode: $mode)
}

# 请求密码重置 Mutation
mutation AuthPasswordRequest($email: String!, $reset_url: String) {
  auth_password_request(email: $email, reset_url: $reset_url)
}

# 重置密码 Mutation
mutation AuthPasswordReset($token: String!, $password: String!) {
  auth_password_reset(token: $token, password: $password)
}

# 获取当前用户信息 Query（使用主端点 /graphql）
query GetCurrentUser {
  users_me {
    id
    first_name
    last_name
    email
    language
    theme
    avatar {
      id
      title
      filename_disk
      type
      width
      height
    }
    role {
      id
      name
      description
      icon
      enforce_tfa
      admin_access
      app_access
    }
    last_access
    last_page
    provider
    external_identifier
    auth_data
    email_notifications
    status
    tfa_secret
  }
}

# 更新当前用户信息 Mutation（使用系统端点）
mutation UpdateCurrentUser($data: update_directus_users_input!) {
  update_users_me(data: $data) {
    id
    first_name
    last_name
    email
    language
    theme
    avatar {
      id
      title
      filename_disk
    }
  }
}

# 启用双因素认证 Mutation
mutation EnableTFA($password: String!) {
  users_me_tfa_generate(password: $password) {
    secret
    url
  }
}

# 确认启用双因素认证 Mutation  
mutation ConfirmTFA($otp: String!, $secret: String!) {
  users_me_tfa_enable(otp: $otp, secret: $secret)
}

# 禁用双因素认证 Mutation
mutation DisableTFA($otp: String!) {
  users_me_tfa_disable(otp: $otp)
}

# 用户注册 Mutation
mutation UserRegister(
  $email: String!
  $password: String!
  $verification_url: String
  $first_name: String
  $last_name: String
) {
  users_register(
    email: $email
    password: $password
    verification_url: $verification_url
    first_name: $first_name
    last_name: $last_name
  )
}

# 验证用户注册 Mutation
mutation UserRegisterVerify($token: String!) {
  users_register_verify(token: $token)
}

# 接受用户邀请 Mutation
mutation UserInviteAccept($token: String!, $password: String!) {
  users_invite_accept(token: $token, password: $password)
}
